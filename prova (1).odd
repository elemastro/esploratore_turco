<?xml-model href="teipublisher_odds.xsd"?>
<TEI xmlns="http://www.tei-c.org/ns/1.0" xmlns:pb="http://teipublisher.com/1.0" xml:lang="en">
    <teiHeader>
        <fileDesc>
            <titleStmt>
                <title>prova</title>
            </titleStmt>
            <publicationStmt>
                <publisher>eXistSolutions GmbH</publisher>
                <availability>
                    <licence target="https://www.gnu.org/licenses/gpl-3.0.en.html">Distributed under GNU General Public License</licence>
                    <p>Copyright 2017 <ref target="http://existsolutions.com">eXistSolutions GmbH</ref>
                    </p>
                    <p>This program is free software: you can redistribute it and/or modify
                        it under the terms of the GNU General Public License as published by
                        the Free Software Foundation, either version 3 of the License, or
                        (at your option) any later version.</p>
                    <p>This program is distributed in the hope that it will be useful,
                        but WITHOUT ANY WARRANTY; without even the implied warranty of
                        MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
                        GNU General Public License for more details.</p>
                </availability>
            </publicationStmt>
            <sourceDesc>
                <p>Generated by <ref target="http://tei-publisher.com">TEI Publisher</ref>
                </p>
                <p>born digital</p>
            </sourceDesc>
        </fileDesc>
        <encodingDesc>
            <tagsDecl>
                <rendition selector=".persName">
                    color: #8460B7;
                </rendition>
                <rendition selector=".persName.disable">
                    color: inherit;
                </rendition>
                <rendition selector=".orgName">
                    color: #C0350F;
                </rendition>
                <rendition selector=".orgName.disable">
                    color: inherit;
                </rendition>
                <rendition selector=".placeName">
                    color: #6A9B41;
                </rendition>
                <rendition selector=".placeName.disable">
                    color: inherit;
                </rendition>
                <rendition selector=".data">
                    color: #F3904B;
                </rendition>
                <rendition selector=".data.disable">
                    color: inherit;
                </rendition>
                <rendition selector=".eventName">
                    color: #1e629c;
                </rendition>
                <rendition selector=".eventName.disable">
                    color: inherit;
                </rendition>
                <rendition selector=".num">
                    color: #E9B321;
                </rendition>
                <rendition selector=".num.disable">
                    color: inherit;
                </rendition>
                <rendition selector=".term">
                    color: #e30ba9;
                </rendition>
                <rendition selector=".term.disable">
                    color: inherit;
                </rendition>
                <rendition selector=".foreign">
                    color: #03a392;
                </rendition>
                <rendition selector=".foreign.disable">
                    color: inherit;
                </rendition>
                <rendition selector=".bibl">
                    color: #9C6C4A;
                </rendition>
                <rendition selector=".bibl.disable">
                    color: inherit;
                </rendition>
                <rendition selector=".orig">
                    display: inline;
                </rendition>
                <rendition selector=".orig.disable">
                    display: none;
                </rendition>
                <rendition selector=".reg">
                    display: none;
                </rendition>
                <rendition selector=".reg.disable">
                    display: inline;
                </rendition>
                <rendition selector=".marker">
                    display: none;
                </rendition>
            </tagsDecl>
        </encodingDesc>
        <revisionDesc>
            <change when="2025-01-14+01:00">Initial version</change>
        </revisionDesc>
    </teiHeader>
    <text>
        <body>
            <schemaSpec start="TEI teiCorpus" source="teipublisher.odd" ident="prova">
                
                <elementSpec ident="persName" mode="change">
                    <model predicate="parent::person and ancestor::listPerson" behaviour="block">
                        <pb:template xmlns="" xml:space="preserve">Nome: [[content]]</pb:template>
                    </model>
                    <model predicate="not(parent::eventName) and not(ancestor::bibl) and not(ancestor::biblStruct) and not(ancestor::fileDesc) and @ref" behaviour="alternate" cssClass="persName">
                        <param name="default" value="."/>
                        <param name="alternate" value="(id(substring-after(@ref, '#'), root($parameters?root))/node())"/>
                    </model>
                </elementSpec>
                
                <elementSpec ident="birth" mode="change">
                    <model predicate="parent::person" behaviour="inline">
                        <pb:template xmlns="" xml:space="preserve"><div style="margin-bottom: 4%; margin-top: 4%;"><b>Nascita: </b><br/> [[content]]</div></pb:template>
                    </model>
                </elementSpec>
                
                <elementSpec ident="death" mode="change">
                    <model predicate="parent::person" behaviour="inline">
                        <pb:template xmlns="" xml:space="preserve"><div style="margin-bottom: 4%; margin-top: 4%;"><b>Morte: </b><br/> [[content]]</div></pb:template>
                    </model>
                </elementSpec>
                
                <elementSpec ident="nationality" mode="change">
                    <model predicate="parent::person" behaviour="block">
                            <pb:template xmlns="" xml:space="preserve">Nazionalit√†: [[content]]</pb:template>
                    </model>
                </elementSpec>
                
                <elementSpec ident="occupation" mode="change">
                    <model predicate="parent::person" behaviour="block">
                            <pb:template xmlns="" xml:space="preserve">Occupazione: [[content]]</pb:template>
                    </model>
                </elementSpec>
                
                <elementSpec ident="faith" mode="change">
                    <model predicate="parent::person" behaviour="block">
                            <pb:template xmlns="" xml:space="preserve">Religione: [[content]]</pb:template>
                    </model>
                </elementSpec>
                
                <elementSpec ident="orgName" mode="change">
                    <model predicate="parent::org" behaviour="block">
                        <pb:template xmlns="" xml:space="preserve"><div style="margin-bottom: 4%;"><b>[[content]]</b></div></pb:template>
                    </model>
                    <model predicate="not(parent::respStmt) and not(parent::title)" behaviour="alternate" cssClass="orgName">
                        <param name="default" value="."/>
                        <param name="alternate" value="(id(substring-after(@ref, '#'), root($parameters?root))/node())"/>
                    </model>
                </elementSpec>
                
                <elementSpec ident="desc" mode="change">
                    <model predicate="parent::org" behaviour="block">
                        <pb:template xmlns="" xml:space="preserve"><div style="margin-bottom: 4%;">[[content]]</div></pb:template>
                    </model>
                </elementSpec>
                
                <elementSpec ident="foreign" mode="change">
                        <model predicate="@xml:lang='fr' and @rend='italic'" behaviour="alternate" cssClass="foreign">
                            <param name="default" value="."/>
                            <param name="alternate" value="'Lingua: francese'"/>
                            <outputRendition>
                                font-style: italic;
                            </outputRendition>
                        </model>
                        <model predicate="@xml:lang='fr'" behaviour="alternate" cssClass="foreign">
                            <param name="default" value="."/>
                            <param name="alternate" value="'Lingua: francese'"/>
                        </model>
                        <model predicate="@xml:lang='en' and @rend='italic'" behaviour="alternate" cssClass="foreign">
                            <param name="default" value="."/>
                            <param name="alternate" value="'Lingua: inglese'"/>
                            <outputRendition>
                                font-style: italic;
                            </outputRendition>
                        </model>
                        <model predicate="@xml:lang='la'" behaviour="alternate" cssClass="foreign">
                            <param name="default" value="."/>
                            <param name="alternate" value="'Lingua: latino'"/>
                        </model>
                </elementSpec>
                
                <elementSpec ident="date" mode="change">
                        <model predicate="parent::birth or parent::death" behaviour="block">
                            <pb:template xmlns="" xml:space="preserve">Data: [[content]]</pb:template>
                        </model>
                        <model predicate="@when and not(parent::eventName) and not(ancestor::bibl) and not(ancestor::biblStruct)" behaviour="alternate" cssClass="data">
                            <param name="default" value="."/>
                            <param name="alternate" value="@when"/>
                        </model>
                        <model predicate="@from" behaviour="alternate" cssClass="data">
                            <param name="default" value="."/>
                            <param name="alternate" value="(@from, '-', @to)"/>
                        </model>
                        <model predicate="@notBefore and @to" behaviour="alternate" cssClass="data">
                            <param name="default" value="."/>
                            <param name="alternate" value="(@notBefore, '-', @to)"/>
                        </model>
                        <model predicate="@notBefore and @notAfter" behaviour="alternate" cssClass="data">
                            <param name="default" value="."/>
                            <param name="alternate" value="('Non prima del ', @notBefore, ' e non dopo il ', @notAfter)"/>
                        </model>
                        <model predicate="@notBefore" behaviour="alternate" cssClass="data">
                            <param name="default" value="."/>
                            <param name="alternate" value="('Non prima del ', @notBefore)"/>
                        </model>
                        <model predicate="@notAfter" behaviour="alternate" cssClass="data">
                            <param name="default" value="."/>
                            <param name="alternate" value="('Non dopo il ', @notAfter)"/>
                        </model>
                        <model predicate="parent::publicationStmt" behaviour="block">
                            <pb:template xmlns="" xml:space="preserve">Data di pubblicazione: [[content]].</pb:template>
                        </model>
                        <model predicate="ancestor::listBibl" behaviour="block">
                            <pb:template xmlns="" xml:space="preserve">Data di pubblicazione: [[content]].</pb:template>
                        </model>
                </elementSpec>
                
                <elementSpec ident="placeName" mode="change">
                    <model predicate="(parent::birth or parent::death) and ancestor::person" behaviour="inline">
                            <pb:template xmlns="" xml:space="preserve">Luogo: [[content]]</pb:template>
                    </model>
                    <model predicate="parent::place and @type='settlement'" behaviour="block">
                            <pb:template xmlns="" xml:space="preserve">Citt√†: [[content]].</pb:template>
                    </model>
                    <model predicate="parent::place and @type='country'" behaviour="block">
                            <pb:template xmlns="" xml:space="preserve">Stato: [[content]].</pb:template>
                    </model>
                    <model predicate="parent::place and @type='bloc'" behaviour="block">
                            <pb:template xmlns="" xml:space="preserve">Continente: [[content]].</pb:template>
                    </model>
                    <model predicate="parent::place and @type='region'" behaviour="block">
                            <pb:template xmlns="" xml:space="preserve">Regione: [[content]].</pb:template>
                    </model>
                    <modelSequence predicate="not(parent::eventName) and not(parent::addName) and not(parent::title)">
                        <model behaviour="alternate" cssClass="placeName">
                            <param name="default" value="."/>
                            <param name="alternate" value="(id(substring-after(@ref, '#'), root($parameters?root))/node())"/>
                        </model>
                        <model behaviour="inline">
                            <param name="longitude" value="tokenize(id(substring-after(@ref, '#'), root($parameters?root))/location/geo, ' ')[2]"/>
                            <param name="latitude" value="tokenize(id(substring-after(@ref, '#'), root($parameters?root))/location/geo, ' ')[1]"/>
                            <param name="label" value="id(substring-after(@ref, '#'), root($parameters?root))/*[1]"/>
                            <pb:template xmlns="" xml:space="preserve">
                                <pb-geolocation class="marker" longitude="[[longitude]]" latitude="[[latitude]]" label="[[label]]" scroll="" emit="subscribe">[[content]]</pb-geolocation>
                            </pb:template>
                        </model>
                    </modelSequence>
                </elementSpec>
                
                <elementSpec ident="geo" mode="change">
                    <model behaviour="block">
                        <pb:template xmlns="" xml:space="preserve">Coordinate: [[content]].</pb:template>
                    </model>
                </elementSpec>
                
                <elementSpec ident="geogName" mode="change">
                    <modelSequence predicate="not(parent::eventName) and not(parent::addName) and not(parent::title)">
                        <model behaviour="alternate" cssClass="placeName">
                            <param name="default" value="."/>
                            <param name="alternate" value="(id(substring-after(@ref, '#'), root($parameters?root))/node())"/>
                        </model>
                        <model predicate="not(parent::place)" behaviour="inline">
                            <param name="longitude" value="tokenize(id(substring-after(@ref, '#'), root($parameters?root))/location/geo, ' ')[2]"/>
                            <param name="latitude" value="tokenize(id(substring-after(@ref, '#'), root($parameters?root))/location/geo, ' ')[1]"/>
                            <param name="label" value="id(substring-after(@ref, '#'), root($parameters?root))/*[1]"/>
                            <pb:template xmlns="" xml:space="preserve">
                                <pb-geolocation class="marker" longitude="[[longitude]]" latitude="[[latitude]]" label="[[label]]" scroll="" emit="subscribe">[[content]]</pb-geolocation>
                            </pb:template>
                        </model>
                    </modelSequence>
                </elementSpec>
                
                <elementSpec ident="geogFeat" mode="change">
                    <modelSequence predicate="not(parent::eventName) and not(parent::addName) and not(parent::title) and not(parent::geogName)">
                        <model behaviour="alternate" cssClass="placeName">
                            <param name="default" value="."/>
                            <param name="alternate" value="(id(substring-after(@ref, '#'), root($parameters?root))/node())"/>
                        </model>
                        <model behaviour="inline">
                            <param name="longitude" value="tokenize(id(substring-after(@ref, '#'), root($parameters?root))/location/geo, ' ')[2]"/>
                            <param name="latitude" value="tokenize(id(substring-after(@ref, '#'), root($parameters?root))/location/geo, ' ')[1]"/>
                            <param name="label" value="id(substring-after(@ref, '#'), root($parameters?root))/*[1]"/>
                            <pb:template xmlns="" xml:space="preserve">
                                <pb-geolocation class="marker" longitude="[[longitude]]" latitude="[[latitude]]" label="[[label]]" scroll="" emit="subscribe">[[content]]</pb-geolocation>
                            </pb:template>
                        </model>
                    </modelSequence>
                </elementSpec>
                
                <elementSpec ident="location" mode="change">
                    <model predicate="parent::place" behaviour="inline">
                        <pb:template xmlns="" xml:space="preserve"><div style="margin-bottom: 4%;"><b>Posizione: </b><br/> [[content]]</div></pb:template>                    
                    </model>
                    <model predicate="parent::birth or parent::death" behaviour="inline">
                        <pb:template xmlns="" xml:space="preserve">([[content]])</pb:template>                    
                    </model>
                </elementSpec>
                
                <elementSpec ident="region" mode="change">
                    <model predicate="ancestor::place" behaviour="block">
                        <pb:template xmlns="" xml:space="preserve">Regione: [[content]].</pb:template>
                    </model>
                    <model predicate="ancestor::birth or ancestor::death" behaviour="inline">
                        <pb:template xmlns="" xml:space="preserve">[[content]],</pb:template>
                    </model>                        
                </elementSpec>
                
                <elementSpec ident="bloc" mode="change">
                    <model predicate="ancestor::place" behaviour="block">
                        <pb:template xmlns="" xml:space="preserve">Continente: [[content]].</pb:template>
                    </model>
                    <model predicate="ancestor::birth or ancestor::death" behaviour="inline"/>
                </elementSpec>
                
                <elementSpec ident="eventName" mode="change">
                    <model predicate="parent::event" behaviour="block">
                        <pb:template xmlns="" xml:space="preserve"><div style="margin-bottom: 4%;"><b>[[content]]</b></div></pb:template>
                    </model>
                    <model behaviour="alternate" cssClass="eventName">
                        <param name="default" value="."/>
                        <param name="alternate" value="(id(substring-after(@ref, '#'), root($parameters?root))/node())"/>
                    </model>
                </elementSpec>
                
                <elementSpec ident="bibl" mode="change">
                    <model predicate="parent::listBibl" behaviour="inline">
                        <pb:template xmlns="" xml:space="preserve"><div style="margin-top: 4%;"><b>Dati dell'opera: </b><br/> [[content]]</div></pb:template>
                    </model>
                    <model predicate="not(ancestor::sourceDesc) and @corresp" behaviour="alternate" cssClass="bibl">
                        <param name="default" value="."/>
                        <param name="alternate" value="(id(substring-after(@corresp, '#'), root($parameters?root))/node())"/>
                    </model>
                </elementSpec>
                
                <elementSpec ident="biblStruct" mode="change">
                    <model predicate="not(ancestor::sourceDesc) and @corresp" behaviour="alternate" cssClass="bibl">
                        <param name="default" value="."/>
                        <param name="alternate" value="(id(substring-after(@corresp, '#'), root($parameters?root))/node())"/>
                    </model>
                    <model predicate="ancestor::sourceDesc" behaviour="listItem"/>
                </elementSpec>
                
                <elementSpec ident="analytic" mode="change">
                    <model predicate="ancestor::listBibl" behaviour="inline">
                        <pb:template xmlns="" xml:space="preserve"><div style="margin-top: 4%;"><b>Dati dell'articolo: </b><br/> [[content]]</div></pb:template>                    
                    </model>
                </elementSpec>
                
                <elementSpec ident="author" mode="change">
                    <model predicate="ancestor::listBibl" behaviour="block">
                        <pb:template xmlns="" xml:space="preserve">Autore: [[content]]</pb:template>
                    </model>
                </elementSpec>
                
                <elementSpec ident="editor" mode="change">
                    <model predicate="ancestor::listBibl" behaviour="block">
                        <pb:template xmlns="" xml:space="preserve">Editore: [[content]]</pb:template>
                    </model>
                </elementSpec>
                
                <elementSpec ident="textLang" mode="change">
                    <model predicate="ancestor::listBibl" behaviour="block">
                        <pb:template xmlns="" xml:space="preserve">Lingua: [[content]]</pb:template>
                    </model>
                </elementSpec>
                
                <elementSpec ident="monogr" mode="change">
                    <model predicate="preceding-sibling::analytic and ancestor::listBibl" behaviour="inline">
                        <pb:template xmlns="" xml:space="preserve"><div style="margin-top: 4%;"><b>Dati della rivista: </b><br/> [[content]]</div></pb:template>                    
                    </model>
                    <model predicate="not(preceding-sibling::analytic) and ancestor::listBibl" behaviour="inline">
                        <pb:template xmlns="" xml:space="preserve"><div style="margin-top: 4%;"><b>Dati dell'opera: </b><br/> [[content]]</div></pb:template>                    
                    </model>
                </elementSpec>
                
                <elementSpec ident="imprint" mode="change">
                    <model predicate="ancestor::listBibl and ancestor::listBibl" behaviour="block">
                        <pb:template xmlns="" xml:space="preserve"><span style="font-weight: bold;">Colophon: </span> <br/><span>[[content]]</span></pb:template>
                    </model>
                </elementSpec>
                
                <elementSpec ident="pubPlace" mode="change">
                    <model predicate="ancestor::listBibl" behaviour="block">
                        <pb:template xmlns="" xml:space="preserve">Luogo di pubblicazione: [[content]]</pb:template>
                    </model>
                </elementSpec>
                
                <elementSpec ident="biblScope" mode="change">
                    <model predicate="@unit='volume' and ancestor::listBibl" behaviour="block">
                        <pb:template xmlns="" xml:space="preserve">Volume: [[content]]</pb:template>
                    </model>
                    <model predicate="@unit='part' and ancestor::listBibl" behaviour="block"/>
                    <model predicate="@unit='chapter' and ancestor::listBibl" behaviour="block">
                        <pb:template xmlns="" xml:space="preserve">Capitolo: [[content]]</pb:template>
                    </model>
                    <model predicate="@unit='page' and ancestor::listBibl" behaviour="block">
                        <pb:template xmlns="" xml:space="preserve">Pagina: [[content]]</pb:template>
                    </model>
                    <model predicate="@unit='pages' and ancestor::listBibl" behaviour="block">
                        <pb:template xmlns="" xml:space="preserve">Pagine: [[content]]</pb:template>
                    </model>
                    <model predicate="@unit='issue' and ancestor::listBibl" behaviour="block">
                        <pb:template xmlns="" xml:space="preserve">Fascicolo: [[content]]</pb:template>
                    </model>
                    <model predicate="@unit='letters' and ancestor::listBibl" behaviour="block">
                        <pb:template xmlns="" xml:space="preserve">Lettere: [[content]]</pb:template>
                    </model>
                    <model predicate="@unit='appendix' and ancestor::listBibl" behaviour="block">
                        <pb:template xmlns="" xml:space="preserve">Appendice: [[content]]</pb:template>
                    </model>
                </elementSpec>
                
                <elementSpec ident="series" mode="change">
                    <model predicate="ancestor::listBibl" behaviour="inline">
                        <pb:template xmlns="" xml:space="preserve"><div style="margin-top: 4%;"><b>Dati della serie: </b><br/> [[content]]</div></pb:template>                    
                    </model>
                </elementSpec>
                
                <elementSpec ident="num" mode="change">
                    <model predicate="not(parent::title)" behaviour="alternate" cssClass="num">
                        <param name="default" value="."/>
                        <param name="alternate" value="('Tipo: ', concat(@type, 'e'))"/>
                    </model>
                </elementSpec>
                
                <elementSpec ident="term" mode="change">
                    <model behaviour="alternate" cssClass="term">
                        <param name="default" value="."/>
                        <param name="alternate" value="('Glossa: ', string(let $term := id(substring-after(@ref, '#'), root($parameters?root))                                                 let $item := $term/parent::label/following-sibling::item[1]                                                 return $item/gloss[@target = concat('#', $term/@xml:id)]))"/>
                    </model>
                </elementSpec>
                
                <elementSpec ident="rs" mode="change">
                    <model predicate="(@type='person' or @type='role') and not(parent::title)" behaviour="alternate" cssClass="persName">
                        <param name="default" value="."/>
                        <param name="alternate" value="(id(substring-after(@ref, '#'), root($parameters?root))/node())"/>
                    </model>
                    <modelSequence predicate="@type='place'">
                        <model behaviour="alternate" cssClass="placeName">
                            <param name="default" value="."/>
                            <param name="alternate" value="(id(substring-after(@ref, '#'), root($parameters?root))/node())"/>
                        </model>
                        <model behaviour="inline">
                            <param name="longitude" value="tokenize(id(substring-after(@ref, '#'), root($parameters?root))/location/geo, ' ')[2]"/>
                            <param name="latitude" value="tokenize(id(substring-after(@ref, '#'), root($parameters?root))/location/geo, ' ')[1]"/>
                            <param name="label" value="id(substring-after(@ref, '#'), root($parameters?root))/*[1]"/>
                            <pb:template xmlns="" xml:space="preserve">
                                <pb-geolocation class="marker" longitude="[[longitude]]" latitude="[[latitude]]" label="[[label]]" scroll="" emit="subscribe">[[content]]</pb-geolocation>
                            </pb:template>
                        </model>
                    </modelSequence>
                    <model predicate="@type='bibl'" behaviour="alternate" cssClass="bibl">
                        <param name="default" value="."/>
                        <param name="alternate" value="(id(substring-after(@ref, '#'), root($parameters?root))/node())"/>
                    </model>
                    <model predicate="@type='org'" behaviour="alternate" cssClass="orgName">
                        <param name="default" value="."/>
                        <param name="alternate" value="(id(substring-after(@ref, '#'), root($parameters?root))/node())"/>
                    </model>
                    <model predicate="@type='event'" behaviour="alternate" cssClass="eventName">
                        <param name="default" value="."/>
                        <param name="alternate" value="(id(substring-after(@ref, '#'), root($parameters?root))/node())"/>
                    </model>
                </elementSpec>
                
                <elementSpec ident="ref" mode="change"><!--questa regola fa in modo che sia cliccabile l'apice che collega il testo alla nota a pi√® di pagina corrispondente-->
                    <model predicate="@type='noteAnchor'" behaviour="note">
                        <param name="label" value="."/>
                        <param name="content" value="(id(substring-after(@target, '#'), root($parameters?root))/node(),id(concat(substring-after(@target, '#'), '_continuo'), root($parameters?root))/node())"/>
                        <param name="place" value="footnote"/>
                        <outputRendition xml:space="preserve">
                            font-size: .85em;
                            background-color: #C0C0C0;
                            padding: 0 .25em;
                            border-right: 1px solid black;
                            text-indent: 0;
                            margin: 0 .25em;
                        </outputRendition>
                    </model>
                    <model predicate="ancestor::fileDesc or ancestor::listEvent" behaviour="link">
                        <param name="uri" value="@target"/>
                        <param name="target" value="'_blank'"/>
                    </model>
                    <model predicate="not(@type='noteAnchor')" behaviour="webcomponent">
                        <param name="name" value="'pb-link'"/><!--serve per collegare i rimandi a note in altre pagine. Ho fatto il collegamento con le pagine perch√© le note vengono genrate dal ref non vengono stampate direttamente-->
                        <param name="xml-id" value="string(let $note := id(substring-after(@target, '#'), root($parameters?root))                                               let $footnote-container := $note/ancestor::div[@type='footnote_container']                                              let $preceding-pb := $footnote-container/preceding-sibling::pb[1]                                                       return $preceding-pb/@xml:id)"/>
                        <param name="template" value="'prova.html'"/>
                        <param name="odd" value="'prova'"/>
                        <param name="subscribe" value="'transcription'"/>
                        <param name="emit" value="'transcription'"/>
                    </model>
                </elementSpec>
                
                <elementSpec ident="note" mode="change">
                    <model predicate="parent::event" behaviour="block"/>
                    <model predicate="ancestor::teiHeader" behaviour="inline">
                        <pb:template xmlns="" xml:space="preserve"><div style="margin-top: 5%;"><b>Note sull'edizione digitale: </b> [[content]]</div></pb:template>
                    </model>
                    <model predicate="parent::monogr and ancestor::listBibl" behaviour="block">
                        <pb:template xmlns="" xml:space="preserve">Note: [[content]]</pb:template>
                    </model>
                    <model predicate="parent::place or parent::org" behaviour="block">
                        <pb:template xmlns="" xml:space="preserve">Note: [[content]]</pb:template>
                    </model>
                </elementSpec>
                
                <elementSpec ident="pb" mode="change">
                    <!--<model predicate="not(following-sibling::div[position()=1][@type='text']) and not(following-sibling::div[position()=2][@type='text'])" behaviour="omit"/> questo modello serve per non far stampare il pb a pagina 183-->
                    <model behaviour="webcomponent" useSourceRendition="true">
                        <param name="content" value="@n"/>
                        <param name="facs" value="concat('immagini/', @n, '.png')"/>
                        <param name="name" value="'pb-facs-link'"/>
                        <param name="emit" value="'transcription'"/>                        
                        <outputRendition xml:space="preserve">
                            font-size: .85em;
                            background-color: #C0C0C0;
                            border-left: 1px solid black;
                            border-right: 1px solid black;
                            padding: 0 1em;
                            margin-bottom: 3%;
                        </outputRendition>
                    </model>
                </elementSpec>
                
                <elementSpec ident="lb" mode="change">
                    <model behaviour="webcomponent">
                        <param name="name" value="'pb-facs-link'"/>
                        <param name="facs" value="(let $div := ./ancestor::div[preceding-sibling::pb][1]                                                                    let $pb-n := $div/preceding-sibling::pb[1]/@n                                                                           return string(concat('immagini/', $pb-n, '.png')))"/>
                        <param name="emit" value="'transcription'"/>
                        <param name="coordinates" value="(let $zone := id(substring-after(@facs, '#'), root($parameters?root))                                                              let $width := $zone/@lrx - $zone/@ulx                                                               let $height := $zone/@lry - $zone/@uly                                                             return concat('[', $zone/@ulx, ',', $zone/@uly, ',', $width, ',', $height, ']'))"/>
                        <param name="content" value="('‚Üí', @n)"/>
                        <param name="trigger" value="'mouseover'"/>
                        <pb:template xmlns="" xml:space="preserve">
                            <pb-facs-link facs="[[facs]]" coordinates="[[coordinates]]" emit="transcription" trigger="[[trigger]]"><br/>[[content]]</pb-facs-link>
                        </pb:template>
                        <outputRendition>
                            font-weight: normal;
                            color: #35424b;
                            border-radius: 5px;
                            margin-right: 2%;
                        </outputRendition>
                    </model>
                </elementSpec>
<!--Per le ultime due coordinate √® come rappresentano (ampiezza) x e (altezza) y rispetto al punto indicato con le prime due coordinate-->
                
                <elementSpec ident="choice" mode="change">
                    <model predicate="orig and reg" behaviour="inline">
                        <param name="content" value="orig[1]"/>
                        <param name="content2" value="reg[1]"/>
                        <pb:template xmlns="" xml:space="preserve">
                            <span class="orig">[[content]]</span><span class="reg">[[content2]]</span>
                        </pb:template>
                    </model>
                    <model predicate="abbr and expan" behaviour="inline">
                        <param name="content" value="expan[1]"/>
                        <pb:template xmlns="" xml:space="preserve"><span class="expan">[[content]]</span></pb:template>
                    </model>
                </elementSpec>
                
                <elementSpec ident="p" mode="change">
                    <model predicate="parent::div[@type='variation_container']" behaviour="omit"/>
                    <model predicate="parent::div[@type='footnote_container']" behaviour="omit"/>
                        <!--<outputRendition xml:space="preserve">
                            background-color: rgba(255, 248, 231, 0.5);
                            padding: 1%;
                        </outputRendition>
                    </model>
                    <model predicate="parent::div[@type='footnote_container']" behaviour="block">
                        <outputRendition xml:space="preserve">
                            background-color: rgba(248, 234, 202, 0.5);
                            padding: 1%;
                        </outputRendition>
                    </model>-->
                </elementSpec>
                
                <elementSpec ident="fw" mode="change">
                    <model predicate="not(../following-sibling::div[@type='text']) and not(following-sibling::fw)" behaviour="inline">
                        <pb:template xmlns="" xml:space="preserve"><span>[[content]]</span><div style="font-style:italic; color:#5F5F5F; margin-top:4%;">Nota editoriale: in questa pagina non viene visualizzato nulla perch√© l'intero testo della pagina fa parte di una nota di variazione.<br/><br/>L'editore dell'edizione digitale ha deciso di far visualizzare di default il testo del manoscritto. Quando si attiva il bottone "Almansi-Warren 1968/Marana 1684" le variazioni riscontrate da Almansi e Warren vengono introdotte nel corpo della pagina, facendo visualizzare a tutti gli effetti il testo della princeps del 1684.<br/>Questo √® il motivo per cui non vengono riportate le note di variazione separate dal testo come avviene invece nell'articolo di cui sono mostrate le immagini.</div></pb:template>
                    </model>
                    <model behaviour="inline"/>
                </elementSpec>
                
                <elementSpec ident="title" mode="change">
                    <model predicate="parent::titleStmt" behaviour="paragraph">
                        <outputRendition xml:space="preserve">
                            font-style: normal;
                            font-weight: bold;
                        </outputRendition>
                    </model>
                    <model predicate="(parent::title[@level='s'] or parent::title[@level='m']) and not(ancestor::p)" behaviour="block">
                        <pb:template xmlns="" xml:space="preserve"><span style="font-style:italic;">[[content]]</span></pb:template>
                    </model>
                    <model predicate="ancestor::listBibl" behaviour="block">
                        <pb:template xmlns="" xml:space="preserve"><span>Titolo: </span> <span style="font-style:italic;">[[content]]</span></pb:template>                        
                    </model>
                    <model predicate="@rend='italic'" behaviour="inline">
                        <outputRendition xml:space="preserve">
                            font-style: italic;
                        </outputRendition>
                    </model>
                </elementSpec>
                
                <elementSpec ident="teiHeader" mode="change">
                    <model output="web" predicate="$parameters?header='short'" behaviour="block"/>
                    <model predicate="$parameters?mode='commentary'" behaviour="inline"/>
                    <model output="web" predicate="$parameters?mode='title'" behaviour="inline">
                        <param name="content" value="(fileDesc/titleStmt/title)"/>
                    </model>
                    <model output="web" behaviour="metadata"/>
                </elementSpec>
                
                <elementSpec ident="fileDesc" mode="change">
                    <model predicate="$parameters?mode='commentary'" behaviour="block">
                        <pb:template xmlns="" xml:space="preserve"><div><h2>Metadati sull'edizione digitale</h2> [[content]]</div></pb:template>
                    </model>
                    <model behaviour="block" cssClass="header-short">
                        <param name="content" value="./titleStmt"/>
                    </model>
                </elementSpec>
                
                <elementSpec ident="edition" mode="change">
                    <model predicate="ancestor::teiHeader" behaviour="inline">
                        <param name="content" value="edition"/>
                        <pb:template xmlns="" xml:space="preserve"><div style="margin-top: 5%;"><b>Edizione digitale:</b> [[content]]</div></pb:template>
                    </model>
                </elementSpec>
                
                <elementSpec ident="publicationStmt" mode="change">
                    <model behaviour="inline">
                        <pb:template xmlns="" xml:space="preserve"><div style="margin-top: 5%;"><b>Informazioni sulla pubblicazione: </b><br/> [[content]]</div></pb:template>
                    </model>
                </elementSpec>
                
                <elementSpec ident="publisher" mode="change">
                    <model predicate="ancestor::publicationStmt or ancestor::listBibl" behaviour="block">
                        <pb:template xmlns="" xml:space="preserve">Editore: [[content]]</pb:template>
                    </model>
                </elementSpec>
                
                <elementSpec ident="address" mode="change">
                    <model predicate="ancestor::publicationStmt" behaviour="block">
                        <pb:template xmlns="" xml:space="preserve">Indirizzo del Dipartimento di Filologia, Letteratura e linguistica: [[content]]</pb:template>
                    </model>
                </elementSpec>
                
                <elementSpec ident="street" mode="change">
                    <model predicate="parent::address" behaviour="inline">
                        <pb:template xmlns="" xml:space="preserve">[[content]],</pb:template>
                    </model>
                </elementSpec>
                
                <elementSpec ident="postCode" mode="change">
                    <model predicate="parent::address" behaviour="inline">
                        <pb:template xmlns="" xml:space="preserve">[[content]],</pb:template>
                    </model>
                </elementSpec>
                
                <elementSpec ident="settlement" mode="change">
                    <model predicate="parent::address or ancestor::sourceDesc or ancestor::listBibl or ancestor::birth or ancestor::death" behaviour="inline">
                        <pb:template xmlns="" xml:space="preserve">[[content]],</pb:template>
                    </model>
                </elementSpec>
                
                <elementSpec ident="country" mode="change">
                    <model predicate="parent::address" behaviour="inline">
                        <pb:template xmlns="" xml:space="preserve">[[content]].</pb:template>
                    </model>
                    <model predicate="ancestor::birth or ancestor::death" behaviour="inline">
                        <pb:template xmlns="" xml:space="preserve">[[content]]</pb:template>
                    </model>
                    <model predicate="ancestor::place" behaviour="block">
                        <pb:template xmlns="" xml:space="preserve">Stato: [[content]].</pb:template>
                    </model>
                </elementSpec>
                
                <elementSpec ident="sourceDesc" mode="change">
                    <model behaviour="list">
                        <pb:template xmlns="" xml:space="preserve"><div><h3>Fonte primaria</h3>[[content]]</div></pb:template>
                    </model>
                </elementSpec>
                
                <elementSpec ident="msDesc" mode="change">
                    <model predicate="ancestor::sourceDesc" behaviour="listItem"/>
                </elementSpec>
                
                <elementSpec ident="msIdentifier" mode="change">
                    <model predicate="ancestor::sourceDesc or ancestor::listBibl" behaviour="inline">
                        <pb:template xmlns="" xml:space="preserve"><div><b>Conservazione del manoscritto: </b> [[content]]</div></pb:template>
                    </model>
                </elementSpec>
                
                <elementSpec ident="institution" mode="change">
                    <model predicate="parent::msIdentifier and ancestor::sourceDesc" behaviour="inline">
                        <pb:template xmlns="" xml:space="preserve">[[content]],</pb:template>
                    </model>
                    <model predicate="parent::msIdentifier and ancestor::listBibl" behaviour="inline">
                        <pb:template xmlns="" xml:space="preserve">[[content]],</pb:template>
                    </model>
                </elementSpec>
                
                <elementSpec ident="repository" mode="change">
                    <model predicate="parent::msIdentifier and ancestor::sourceDesc" behaviour="inline">
                        <pb:template xmlns="" xml:space="preserve">[[content]],</pb:template>
                    </model>
                    <model predicate="parent::msIdentifier and ancestor::listBibl" behaviour="inline">
                        <pb:template xmlns="" xml:space="preserve">[[content]],</pb:template>
                    </model>
                </elementSpec>
                
                <elementSpec ident="collection" mode="change">
                    <model predicate="parent::msIdentifier and ancestor::sourceDesc" behaviour="inline">
                        <pb:template xmlns="" xml:space="preserve">[[content]],</pb:template>
                    </model>
                </elementSpec>
                
                <elementSpec ident="idno" mode="change">
                    <model predicate="parent::msIdentifier and ancestor::sourceDesc" behaviour="inline">
                        <pb:template xmlns="" xml:space="preserve">[[content]].</pb:template>
                    </model>
                    <model predicate="parent::monogr or ancestor::listBibl" behaviour="block">
                        <pb:template xmlns="" xml:space="preserve">Identificativo: [[content]]</pb:template>
                    </model>
                </elementSpec>
                
                <elementSpec ident="encodingDesc" mode="change">
                    <model predicate="$parameters?mode='commentary'" behaviour="block">
                        <pb:template xmlns="" xml:space="preserve"><div><h2>Metadati sulla codifica</h2> [[content]]</div></pb:template>
                    </model>
                </elementSpec>
                
                <elementSpec ident="appInfo" mode="change">
                    <model output="web" predicate="$parameters?header='short'" behaviour="omit"/>
                    <model predicate="$parameters?mode='commentary'" behaviour="block">
                        <pb:template xmlns="" xml:space="preserve"><div><h3>Ambienti utilizzati:</h3> [[content]]</div></pb:template>
                    </model>
                </elementSpec>
                
                <elementSpec ident="application" mode="change">
                    <model output="web" predicate="$parameters?header='short'" behaviour="omit"/>
                    <model predicate="$parameters?mode='commentary'" behaviour="list">
                        <param name="content" value="(label, ': ', p)"/>
                    </model>
                </elementSpec>
                
                <elementSpec ident="editorialDecl" mode="change">
                    <model output="web" predicate="$parameters?header='short'" behaviour="omit"/>
                    <model predicate="$parameters?mode='commentary'" behaviour="block">
                        <pb:template xmlns="" xml:space="preserve"><div><h3>Scelte editoriali:</h3> [[content]]</div></pb:template>
                    </model>
                </elementSpec>
                
                <elementSpec ident="correction" mode="change">
                    <model output="web" predicate="$parameters?header='short'" behaviour="omit"/>
                    <model predicate="$parameters?mode='commentary'" behaviour="inline">
                        <pb:template xmlns="" xml:space="preserve"><div style="margin-top: 5%;"><b>Correzioni: </b> [[content]]</div></pb:template>
                    </model>
                </elementSpec>
                
                <elementSpec ident="gi" mode="change">
                    <model behaviour="inline">
                        <pb:template xmlns="" xml:space="preserve">&lt;[[content]]&gt;</pb:template>
                        <outputRendition xml:space="preserve">
                            font-family: Courier New, sans serif;
                        </outputRendition>
                    </model>
                </elementSpec>
                
                <elementSpec ident="hyphenation" mode="change">
                    <model output="web" predicate="$parameters?header='short'" behaviour="omit"/>
                    <model predicate="$parameters?mode='commentary'" behaviour="inline">
                        <pb:template xmlns="" xml:space="preserve"><div style="margin-top: 5%;"><b>Gestione dei trattini: </b> [[content]]</div></pb:template>
                    </model>
                </elementSpec>
                
                <elementSpec ident="normalization" mode="change">
                    <model output="web" predicate="$parameters?header='short'" behaviour="omit"/>
                    <model predicate="$parameters?mode='commentary'" behaviour="inline">
                        <pb:template xmlns="" xml:space="preserve"><div style="margin-top: 5%;"><b>Normalizzazione: </b> [[content]]</div></pb:template>
                    </model>
                </elementSpec>
                
                <elementSpec ident="punctuation" mode="change">
                    <model output="web" predicate="$parameters?header='short'" behaviour="omit"/>
                    <model predicate="$parameters?mode='commentary'" behaviour="inline">
                        <pb:template xmlns="" xml:space="preserve"><div style="margin-top: 5%;"><b>Punteggiatura: </b> [[content]]</div></pb:template>
                    </model>
                </elementSpec>
                
                <elementSpec ident="quotation" mode="change">
                    <model output="web" predicate="$parameters?header='short'" behaviour="omit"/>
                    <model predicate="$parameters?mode='commentary'" behaviour="inline">
                        <pb:template xmlns="" xml:space="preserve"><div style="margin-top: 5%;"><b>Citazioni: </b> [[content]]</div></pb:template>
                    </model>
                </elementSpec>
                
                <elementSpec ident="projectDesc" mode="change">
                    <model output="web" predicate="$parameters?header='short'" behaviour="omit"/>
                    <model predicate="$parameters?mode='commentary'" behaviour="block">
                        <pb:template xmlns="" xml:space="preserve"><div><h3>Finalit√† del progetto:</h3> [[content]]</div></pb:template>
                    </model>
                </elementSpec>
                
                <elementSpec ident="samplingDecl" mode="change">
                    <model output="web" predicate="$parameters?header='short'" behaviour="omit"/>
                    <model predicate="$parameters?mode='commentary'" behaviour="block">
                        <pb:template xmlns="" xml:space="preserve"><div><h3>Metodo per la selezione dei testi:</h3> [[content]]</div></pb:template>
                    </model>
                </elementSpec>
                
                <elementSpec ident="graphic" mode="change">
                    <model predicate="parent::figure" behaviour="graphic">
                        <param name="url" value="@url"/>
                        <param name="width" value="'70%'"/>
                    </model>
                </elementSpec>
                
                <elementSpec ident="head" mode="change">
                    <model predicate="parent::figure" behaviour="omit"/>
                    <model predicate="parent::div" behaviour="heading">
                        <param name="level" value="count(ancestor::div)"/>
                    </model>
                    <model behaviour="block"/>
                </elementSpec>
                
                <elementSpec ident="figDesc" mode="change">
                    <model predicate="parent::figure" behaviour="omit"/>
                </elementSpec>
                
                <elementSpec ident="cit" mode="change">
                    <model behaviour="inline"/>
                </elementSpec>
                
                <elementSpec ident="quote" mode="change">
                    <model predicate="@xml:lang" behaviour="alternate" cssClass="foreign">
                        <param name="default" value="('¬´', ., '¬ª')"/>
                        <param name="alternate" value="('Il passo √® tratto da: ', (id(substring-after(@source, '#'), root($parameters?root))/node()))"/>
                    </model>
                </elementSpec>
                
                <elementSpec ident="q" mode="change">
                    <model predicate="@rend" behaviour="inline">
                        <pb:template xmlns="" xml:space="preserve"><span>¬´[[content]]¬ª</span></pb:template>
                    </model>
                </elementSpec>
    
            </schemaSpec>
        </body>
    </text>
</TEI>